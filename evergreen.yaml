stepback: false
ignore:
    - "*.rst"

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operation. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    must_have_test_results: true
    commands:
      - func: get-project-and-modules
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  get-project-and-modules:
    - command: git.get_project
      type: system
      params:
        directory: timber
    - command: subprocess.exec
      type: setup
      params:
        working_dir: timber
        binary: make
        args: ["mod-tidy"]
        include_expansions_in_env: ["GOROOT"]

  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: timber
      binary: make
      args: ["${target}"]
      include_expansions_in_env: ["GOROOT", "RACE_DETECTOR"]
      env:
        AWS_KEY: ${aws_key}
        AWS_SECRET: ${aws_secret}
 
#######################################
#                Tasks                #
#######################################
post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "timber/build/output.*"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["timber/build/output.*.coverage.html"]
      remote_file: timber/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["timber/build/output.*.coverage"]
      remote_file: timber/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"

tasks:
  - <<: *run-build
    tags: ["report"]
    name: lint-timber
  - <<: *run-build
    tags: ["report"]
    name: lint-buildlogger
  - <<: *run-build
    tags: ["report"]
    name: lint-perf
  - <<: *run-build
    tags: ["report"]
    name: lint-testresults
  - <<: *run-build
    tags: ["report"]
    name: lint-testutil

  - name: verify-mod-tidy
    tags: ["report"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: timber
      - func: run-make
        vars: { target: "${task_name}" }

  - <<: *run-build
    tags: [ "report" ]
    name: html-coverage

  - <<: *run-build
    tags: ["test"]
    name: test-timber
  - <<: *run-build
    tags: ["test"]
    name: test-buildlogger
  - <<: *run-build
    tags: ["test"]
    name: test-perf
  - <<: *run-build
    tags: ["test"]
    name: test-testresults

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: coverage
    display_name: Coverage
    expansions:
      GOROOT: /opt/golang/go1.24
    run_on:
      - ubuntu2204-small
    tasks:
      - name: ".report"

  - name: ubuntu
    display_name: Ubuntu 22.04
    expansions:
      RACE_DETECTOR: true
      GOROOT: /opt/golang/go1.24
    run_on:
      - ubuntu2204-small
    tasks:
      - name: ".test"

  - name: macos
    display_name: macOS
    expansions:
      GOROOT: /opt/golang/go1.24444
    run_on:
      - macos-1100-arm64
    tasks:
      - name: ".test"

  - name: windows
    display_name: Windows
    run_on:
      - windows-vsCurrent-small
    expansions:
      GOROOT: C:/golang/go1.24
    tasks:
      - name: ".test"
